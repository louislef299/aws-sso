---
env:
  GOVERSION: "1.21.4"

jobs:
  golangci:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=${{ env.GOVERSION }}'
      - name: Check out code
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          args: --config=golangci.yaml
          version: latest

  check-goreleaser:
    name: Check Goreleaser
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
    - uses: actions/setup-go@v5
      with:
        go-version: '>=${{ env.GOVERSION }}'
    - uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: check

  test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=${{ env.GOVERSION }}'
        check-latest: true
    - name: Test
      run: go test -v -race ./...

  conventional-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0

  validate-binaries:
    needs: [test, golangci, check-goreleaser]
    name: Validate Binary Builds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
    - uses: actions/setup-go@v5
      with:
        go-version: '>=${{ env.GOVERSION }}'
    - uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: build --clean --skip=validate --snapshot

name: Lint & Test

on:
  pull_request:
    branches: [ "*" ]
